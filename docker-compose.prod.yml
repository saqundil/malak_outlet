version: '3.8'

services:
  # Laravel Application - Production
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: malak_outlet_prod
    restart: always
    working_dir: /var/www/html
    volumes:
      - ./storage:/var/www/html/storage
      - ./public/images:/var/www/html/public/images
      - app_logs:/var/www/html/storage/logs
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_URL=https://your-domain.com
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=malak_outlet_prod
      - DB_USERNAME=malak_user
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
    depends_on:
      - db
      - redis
    networks:
      - malak_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: malak_outlet_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - malak_network

  # MySQL Database - Production
  db:
    image: mysql:8.0
    container_name: malak_outlet_db_prod
    restart: always
    environment:
      MYSQL_DATABASE: malak_outlet_prod
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: malak_user
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data_prod:/var/lib/mysql
    networks:
      - malak_network

  # Redis - Production
  redis:
    image: redis:7-alpine
    container_name: malak_outlet_redis_prod
    restart: always
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data_prod:/data
    networks:
      - malak_network

  # Queue Worker
  queue:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: malak_outlet_queue
    restart: always
    working_dir: /var/www/html
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600
    volumes:
      - ./storage:/var/www/html/storage
    environment:
      - APP_ENV=production
      - DB_HOST=db
      - DB_DATABASE=malak_outlet_prod
      - DB_USERNAME=malak_user
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
    depends_on:
      - db
      - redis
    networks:
      - malak_network

  # Scheduler
  scheduler:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: malak_outlet_scheduler
    restart: always
    working_dir: /var/www/html
    command: /bin/bash -c "while true; do php artisan schedule:run; sleep 60; done"
    volumes:
      - ./storage:/var/www/html/storage
    environment:
      - APP_ENV=production
      - DB_HOST=db
      - DB_DATABASE=malak_outlet_prod
      - DB_USERNAME=malak_user
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      - db
    networks:
      - malak_network

volumes:
  db_data_prod:
    driver: local
  redis_data_prod:
    driver: local
  app_logs:
    driver: local

networks:
  malak_network:
    driver: bridge
